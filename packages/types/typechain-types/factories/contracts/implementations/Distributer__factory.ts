/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Distributer,
  DistributerInterface,
} from "../../../contracts/implementations/Distributer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_primaryOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_secondaryOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_primaryTreasure",
        type: "address",
      },
      {
        internalType: "address",
        name: "_secondaryTreasure",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_splitPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toPrimary",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toSecondary",
        type: "uint256",
      },
    ],
    name: "Distributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "PrimaryOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldTreasure",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newTreasure",
        type: "address",
      },
    ],
    name: "PrimaryTreasureUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "SecondaryOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldTreasure",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newTreasure",
        type: "address",
      },
    ],
    name: "SecondaryTreasureUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "SPLIT_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SPLIT_PERCENTAGE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primaryOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primaryTreasure",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryTreasure",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPrimaryTreasure",
        type: "address",
      },
    ],
    name: "setPrimaryTreasure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSecondaryTreasure",
        type: "address",
      },
    ],
    name: "setSecondaryTreasure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferPrimaryOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferSecondaryOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161090d38038061090d83398101604081905261002f916102e9565b84846001600160a01b0382161580159061005157506001600160a01b03811615155b6100915760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b60448201526064015b60405180910390fd5b806001600160a01b0316826001600160a01b0316036100f25760405162461bcd60e51b815260206004820152601860248201527f4f776e657273206d75737420626520646966666572656e7400000000000000006044820152606401610088565b600080546001600160a01b03199081166001600160a01b03858116918217845560018054909316908516179091556040519091907f56f6901da0707d3d8416ac2f62822ccd03d37a5110397590a1f144dd028213cb908290a36040516001600160a01b038216906000907fd91e5ba07efb2e532a3d502f5fb4451cf8fe4006f3b90283d8f2f51a06e5358c908290a350506001600160a01b038316158015906101a357506001600160a01b03821615155b6101de5760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606401610088565b6103e8811061022f5760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642073706c69742070657263656e7461676500000000000000006044820152606401610088565b6080819052600280546001600160a01b038086166001600160a01b0319928316811790935560038054918616919092161790556040516000907fcd33dbd01ecb4f5d9826a14e85b95f2217cbaec3a0c839d815b21ee19f3b8d2e908290a36040516001600160a01b038316906000907f6b9c558bf88aa33b625df7bbd0d44c5559d881e3e409eb15443aa42b2cf95811908290a35050505050610347565b80516001600160a01b03811681146102e457600080fd5b919050565b600080600080600060a0868803121561030157600080fd5b61030a866102cd565b9450610318602087016102cd565b9350610326604087016102cd565b9250610334606087016102cd565b9150608086015190509295509295909350565b6080516105ab610362600039600061016e01526105ab6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a10ef23b11610066578063a10ef23b14610119578063a7b5aaf71461012c578063b19c47201461013f578063ccb9cc7f14610156578063f96341bd1461016957600080fd5b806336a5a231146100a35780635cb258b6146100cd57806363bafc56146100e257806386830834146100f55780638e10be3314610108575b600080fd5b6001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100e06100db3660046104fd565b610190565b005b6100e06100f03660046104fd565b61025d565b6100e06101033660046104fd565b610329565b6000546001600160a01b03166100b0565b6100e06101273660046104fd565b610414565b6002546100b0906001600160a01b031681565b6101486103e881565b6040519081526020016100c4565b6003546100b0906001600160a01b031681565b6101487f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146101e75760405162461bcd60e51b81526020600482015260156024820152742737ba103a343290383934b6b0b93c9037bbb732b960591b60448201526064015b60405180910390fd5b6001600160a01b03811661020d5760405162461bcd60e51b81526004016101de9061052d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f56f6901da0707d3d8416ac2f62822ccd03d37a5110397590a1f144dd028213cb9190a35050565b6001546001600160a01b031633146102b15760405162461bcd60e51b81526020600482015260176024820152762737ba103a34329039b2b1b7b73230b93c9037bbb732b960491b60448201526064016101de565b6001600160a01b0381166102d75760405162461bcd60e51b81526004016101de9061052d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd91e5ba07efb2e532a3d502f5fb4451cf8fe4006f3b90283d8f2f51a06e5358c90600090a35050565b6001546001600160a01b0316331461037d5760405162461bcd60e51b81526020600482015260176024820152762737ba103a34329039b2b1b7b73230b93c9037bbb732b960491b60448201526064016101de565b6001600160a01b0381166103c25760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b60448201526064016101de565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f6b9c558bf88aa33b625df7bbd0d44c5559d881e3e409eb15443aa42b2cf9581190600090a35050565b6000546001600160a01b031633146104665760405162461bcd60e51b81526020600482015260156024820152742737ba103a343290383934b6b0b93c9037bbb732b960591b60448201526064016101de565b6001600160a01b0381166104ab5760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b60448201526064016101de565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fcd33dbd01ecb4f5d9826a14e85b95f2217cbaec3a0c839d815b21ee19f3b8d2e90600090a35050565b60006020828403121561050f57600080fd5b81356001600160a01b038116811461052657600080fd5b9392505050565b60208082526028908201527f436f4f776e61626c653a206e6577206f776e657220697320746865207a65726f604082015267206164647265737360c01b60608201526080019056fea26469706673582212208075153e3f2560076e29fe90cff5588cecd4f3d6030b5bd18c134bd2cb9e7b4064736f6c634300081c0033";

type DistributerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DistributerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Distributer__factory extends ContractFactory {
  constructor(...args: DistributerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _primaryOwner: AddressLike,
    _secondaryOwner: AddressLike,
    _primaryTreasure: AddressLike,
    _secondaryTreasure: AddressLike,
    _splitPercentage: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _primaryOwner,
      _secondaryOwner,
      _primaryTreasure,
      _secondaryTreasure,
      _splitPercentage,
      overrides || {}
    );
  }
  override deploy(
    _primaryOwner: AddressLike,
    _secondaryOwner: AddressLike,
    _primaryTreasure: AddressLike,
    _secondaryTreasure: AddressLike,
    _splitPercentage: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _primaryOwner,
      _secondaryOwner,
      _primaryTreasure,
      _secondaryTreasure,
      _splitPercentage,
      overrides || {}
    ) as Promise<
      Distributer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Distributer__factory {
    return super.connect(runner) as Distributer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributerInterface {
    return new Interface(_abi) as DistributerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Distributer {
    return new Contract(address, _abi, runner) as unknown as Distributer;
  }
}
