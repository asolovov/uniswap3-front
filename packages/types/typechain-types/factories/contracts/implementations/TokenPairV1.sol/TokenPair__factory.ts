/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  Provider,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TokenPair,
  TokenPairInterface,
} from "../../../../contracts/implementations/TokenPairV1.sol/TokenPair";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token0_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
      {
        internalType: "address",
        name: "dexContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "priceManager_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDexStructs.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "NewOrderState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NewPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBalance0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBalance1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "NewProvider",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OrderClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDexStructs.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "OrderCommited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxBalance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBalance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDexStructs.Provider",
        name: "state",
        type: "tuple",
      },
    ],
    name: "ProviderNewState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnedBalance0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnedBalance1",
        type: "uint256",
      },
    ],
    name: "ProviderRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowedMaxBalance0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowedMaxBalance1",
        type: "uint256",
      },
    ],
    name: "addProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "claimRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "closeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "commitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prov",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "depositLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IDexStructs.Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "getProviderData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxBalance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBalance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
        ],
        internalType: "struct IDexStructs.Provider",
        name: "providerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProviders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxBalance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBalance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
        ],
        internalType: "struct IDexStructs.Provider[]",
        name: "providers",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getQueuedOrders",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IDexStructs.Order[]",
        name: "orders",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pairContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "tkn0",
            type: "address",
          },
          {
            internalType: "address",
            name: "tkn1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "liquidity0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price1",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct IDexStructs.Pair",
        name: "pair",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "removeProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051612d69380380612d6983398101604081905261002f916101cd565b600080546001600160a01b038086166001600160a01b031992831617909255600180548584169216919091179055858116608081905290851660a0526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa1580156100a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ca919061022b565b60026000876001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff16021790555060a0516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016b919061022b565b6001600160a01b039094166000908152600260205260409020805460ff9590951660ff19958616179055600b5550506001600a819055600d805490921617905550610255565b80516001600160a01b03811681146101c857600080fd5b919050565b600080600080600060a086880312156101e557600080fd5b6101ee866101b1565b94506101fc602087016101b1565b935061020a604087016101b1565b9250610218606087016101b1565b9150608086015190509295509295909350565b60006020828403121561023d57600080fd5b815160ff8116811461024e57600080fd5b9392505050565b60805160a051612a5c61030d600039600081816101b8015281816102bf015281816104650152818161071401528181610ceb01528181610d480152818161132a01528181611847015281816118a001528181611ceb015261200f0152600081816101280152818161024e0152818161042b015281816106ea015281816109c801528181610cb4015281816112bf01528181611793015281816117ec01528181611ca601528181611fda01526120ba0152612a5c6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806398583d89116100ad578063dcf2066611610071578063dcf20666146102e3578063e26ff5801461032d578063ea999dff14610340578063edc922a914610353578063fc2d64e31461036857600080fd5b806398583d8914610237578063a0a986f11461024c578063ac9f02221461028a578063d09ef2411461029d578063d21220a7146102bd57600080fd5b8063434153c6116100f4578063434153c6146101a35780636caf25ce146101b65780636e7ff371146101fe5780638a355a57146102115780638d6cc56d1461022457600080fd5b80630dfe16811461012657806310c44d421461016557806322f3e2d41461017a578063309c785914610190575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b61017861017336600461249f565b610388565b005b600d5460ff16604051901515815260200161015c565b61017861019e3660046124ba565b610529565b6101786101b13660046124ba565b610746565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166000908152600360205260409020545b60405190815260200161015c565b61017861020c3660046124ed565b61097b565b61017861021f36600461249f565b610c25565b610178610232366004612542565b610c80565b61023f610db8565b60405161015c91906125a5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166000908152600360205260409020546101f0565b610178610298366004612601565b610edc565b6102b06102ab366004612542565b610f19565b60405161015c919061261e565b7f0000000000000000000000000000000000000000000000000000000000000000610148565b6040805161010081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820152905161015c919061262c565b61017861033b36600461269c565b610f88565b61017861034e3660046124ba565b6110fc565b61035b611357565b60405161015c919061271c565b61037b61037636600461249f565b61147e565b60405161015c9190612760565b6000546001600160a01b031633146103bb5760405162461bcd60e51b81526004016103b29061276f565b60405180910390fd5b6103c4816114fe565b6103e05760405162461bcd60e51b81526004016103b290612799565b6103e861151e565b6001600160a01b03811660009081526005602081905260408220908101805460068301805492859055939093559091908115610452576104526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168584611902565b801561048c5761048c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168583611902565b836001600160a01b03167f4f5354be5a90205eabeb8da456cad20ea17fc105d42f3035d8db4cee4fd9b3378460405161051b919081546001600160a01b0316815260018201546020820152600282015460408201526003820154606082015260048201546080820152600582015460a0820152600682015460c082015260079091015460e08201526101000190565b60405180910390a250505050565b6000546001600160a01b031633146105535760405162461bcd60e51b81526004016103b29061276f565b61055c836114fe565b6105785760405162461bcd60e51b81526004016103b290612799565b60008211806105875750600081115b6105c85760405162461bcd60e51b815260206004820152601260248201527154503a20616d6f756e74206973207a65726f60701b60448201526064016103b2565b6001600160a01b038316600090815260056020526040902060018101546003909101546105f69084906127da565b1115801561063057506001600160a01b0383166000908152600560205260409020600281015460049091015461062d9083906127da565b11155b61067c5760405162461bcd60e51b815260206004820152601860248201527f54503a206d61782062616c616e6365206578636565646564000000000000000060448201526064016103b2565b61068461151e565b6001600160a01b038316600090815260056020526040812060030180548492906106af9084906127da565b90915550506001600160a01b038316600090815260056020526040812060040180548392906106df9084906127da565b9091555061070f90507f000000000000000000000000000000000000000000000000000000000000000083611954565b6107397f000000000000000000000000000000000000000000000000000000000000000082611954565b610741611985565b505050565b6000546001600160a01b031633146107705760405162461bcd60e51b81526004016103b29061276f565b6001600160a01b0383166107b95760405162461bcd60e51b815260206004820152601060248201526f54503a207a65726f206164647265737360801b60448201526064016103b2565b6107c2836114fe565b156108045760405162461bcd60e51b815260206004820152601260248201527154503a20616c72656164792065786973747360701b60448201526064016103b2565b60008211806108135750600081115b6108575760405162461bcd60e51b8152602060048201526015602482015274054503a20616c6c6f7765642062616c616e6365203605c1b60448201526064016103b2565b60408051610100810182526001600160a01b038581168083526020808401878152848601878152600060608088018281526080890183815260a08a0184815260c08b0185815260e08c018681528a87526005808b528e88209d518e549d166001600160a01b03199d8e16178e5598516001808f0191909155975160028e0155935160038d0155915160048c015551958a019590955593516006808a01919091559351600790980197909755825491820183559182527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180549094168317909355845187815290810186905293840191909152917fc477e6172faedbf475505fe5161464e4a210b88065fb61c6515ee78d9539b134910160405180910390a2505050565b600d5460ff166109be5760405162461bcd60e51b815260206004820152600e60248201526d54503a206e6f742061637469766560901b60448201526064016103b2565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600360205260408120549003610a365760405162461bcd60e51b815260206004820152600e60248201526d54503a207a65726f20707269636560901b60448201526064016103b2565b6000546001600160a01b03163314610a605760405162461bcd60e51b81526004016103b29061276f565b610a6a8483611954565b60006040518060c00160405280600a548152602001876001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b031681526020018481526020018342610abe91906127da565b9052600a80549192506000610ad2836127ed565b9190505550806000015181602001516001600160a01b03167fa5f69189019c16683c35d5daeb132509a2e4c76760aa090e7f2df23347c787c183604051610b19919061261e565b60405180910390a3610b29611985565b6000610b3482611a9e565b90508015610bf05782600003610b5d57610b586001600160a01b0387168883611902565b610bf0565b6080820181815282516000908152600960209081526040918290208551808255918601516001820180546001600160a01b03199081166001600160a01b039384161790915593870151600283018054861691831691909117905560608701516003830180549095169116179092559151600482015560a0840151600590910155610be990600790611bb4565b5050610c1e565b81516040517fa7bec7790a90eefc51c752a274c61fa256e58e17fbfeb1340045117ada7f2f4490600090a250505b5050505050565b6000546001600160a01b03163314610c4f5760405162461bcd60e51b81526004016103b29061276f565b610c58816114fe565b610c745760405162461bcd60e51b81526004016103b290612799565b610c7d81611c06565b50565b6001546001600160a01b03163314610caa5760405162461bcd60e51b81526004016103b29061276f565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660008181526003602090815260408083208690557f00000000000000000000000000000000000000000000000000000000000000009094168252600290528281205491815291909120548291610d319160ff9182169116612806565b610d3c90600a612906565b610d469190612915565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660009081526003602090815260409182902092909255518281527f270b316b51ab2cf3a3bb8ca4d22e76a327d05e762fcaa8bd6afaf8cfde9270b7910160405180910390a150565b60606000610dc66007611ea7565b9050805167ffffffffffffffff811115610de257610de2612937565b604051908082528060200260200182016040528015610e1b57816020015b610e086123e4565b815260200190600190039081610e005790505b50915060005b8151811015610ed75760096000838381518110610e4057610e4061294d565b6020908102919091018101518252818101929092526040908101600020815160c0810183528154815260018201546001600160a01b03908116948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460a08201528351849083908110610ec457610ec461294d565b6020908102919091010152600101610e21565b505090565b6000546001600160a01b03163314610f065760405162461bcd60e51b81526004016103b29061276f565b600d805460ff1916911515919091179055565b610f216123e4565b50600090815260096020908152604091829020825160c0810184528154815260018201546001600160a01b0390811693820193909352600282015483169381019390935260038101549091166060830152600481015460808301526005015460a082015290565b6000546001600160a01b03163314610fb25760405162461bcd60e51b81526004016103b29061276f565b600081815260096020908152604091829020825160c0810184528154815260018201546001600160a01b03908116938201849052600283015481169482019490945260038201549093166060840152600481015460808401526005015460a08301526110535760405162461bcd60e51b815260206004820152601060248201526f15140e88191bd95cdb9d08195e1a5cdd60821b60448201526064016103b2565b428160a001511015611092576110898160200151826080015183604001516001600160a01b03166119029092919063ffffffff16565b61074182611f53565b80602001516001600160a01b0316836001600160a01b0316146110c75760405162461bcd60e51b81526004016103b29061276f565b6110f18160200151826080015183604001516001600160a01b03166119029092919063ffffffff16565b805161074190611f53565b6000546001600160a01b031633146111265760405162461bcd60e51b81526004016103b29061276f565b61112f836114fe565b61114b5760405162461bcd60e51b81526004016103b290612799565b600082118061115a5750600081115b61119b5760405162461bcd60e51b815260206004820152601260248201527154503a20616d6f756e74206973207a65726f60701b60448201526064016103b2565b6111a361151e565b6001600160a01b0380841660009081526005602081815260409283902083516101008101855281549095168552600181015491850191909152600281015492840192909252600382015460608401819052600483015460808501529082015460a0840152600682015460c084015260079091015460e0830152831180159061122f575081816080015110155b61127b5760405162461bcd60e51b815260206004820152601860248201527f54503a20696e73756666696369656e742062616c616e6365000000000000000060448201526064016103b2565b82156112e6576001600160a01b038416600090815260056020526040812060030180548592906112ac908490612963565b909155506112e690506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168585611902565b8115611351576001600160a01b03841660009081526005602052604081206004018054849290611317908490612963565b9091555061135190506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168584611902565b50505050565b6006546060908067ffffffffffffffff81111561137657611376612937565b6040519080825280602002602001820160405280156113af57816020015b61139c612435565b8152602001906001900390816113945790505b50915060005b81811015610ed75760056000600683815481106113d4576113d461294d565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825161010081018452815490941684526001810154918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c08301526007015460e0820152835184908390811061146b5761146b61294d565b60209081029190910101526001016113b5565b611486612435565b506001600160a01b0390811660009081526005602081815260409283902083516101008101855281549095168552600181015491850191909152600281015492840192909252600382015460608401526004820154608084015281015460a0830152600681015460c08301526007015460e082015290565b6001600160a01b0390811660009081526005602052604090205416151590565b600654600080805b838110156115cc5760056000600683815481106115455761154561294d565b60009182526020808320909101546001600160a01b0316835282019290925260400190206003015461157790846127da565b925060056000600683815481106115905761159061294d565b60009182526020808320909101546001600160a01b031683528201929092526040019020600401546115c290836127da565b9150600101611526565b50811580156115d9575080155b156115e357505050565b6000806115ee611fd0565b909250905083821183821160008261160f5761160a8588612963565b611619565b6116198786612963565b90506000826116315761162c8588612963565b61163b565b61163b8786612963565b905060005b898110156118f657600060056000600684815481106116615761166161294d565b60009182526020808320909101546001600160a01b031683528201929092526040019020600381015460048201549192509087156116dd578a156116d2578a6116aa8783612976565b6116b49190612915565b8360030160008282546116c791906127da565b9091555061170b9050565b8b6116aa8784612976565b8b6116e88784612976565b6116f29190612915565b8360030160008282546117059190612963565b90915550505b8615611755578b1561174a578b6117228684612976565b61172c9190612915565b83600401600082825461173f91906127da565b909155506117839050565b8a6117228683612976565b8a6117608683612976565b61176a9190612915565b83600401600082825461177d9190612963565b90915550505b8b156117e2576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600c60205260409020548c906117ce9084612976565b6117d89190612915565b6005840155611837565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600c60205260409020548b906118279083612976565b6118319190612915565b60058401555b8a15611896576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600c60205260409020548b906118829083612976565b61188c9190612915565b60068401556118eb565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166000908152600c60205260409020548c906118db9084612976565b6118e59190612915565b60068401555b505050600101611640565b50505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261074190849061212f565b6001600160a01b0382166000908152600460205260408120805483929061197c9084906127da565b90915550505050565b600080526008602052600080516020612a07833981519152545b8015610c7d57600081815260096020908152604091829020825160c0810184528154815260018201546001600160a01b0390811693820193909352600282015483169381019390935260038101549091166060830152600481015460808301526005015460a08201819052421115611a4a57611a3b8160200151826080015183604001516001600160a01b03166119029092919063ffffffff16565b611a4482611f53565b50611a7f565b6000611a5582611a9e565b90508015611a73576000838152600960205260409020600401555050565b611a7c83611f53565b50505b50600080526008602052600080516020612a078339815191525461199f565b60608101516001600160a01b0316600090815260046020526040812054808203611acb5750506080015190565b6000611adf84604001518560800151612192565b90506000828211611af05781611af2565b825b90506000612710600b5483611b079190612976565b611b119190612915565b60608701516001600160a01b03166000908152600c6020526040812080549293508392909190611b429084906127da565b90915550506020860151611b6f90611b5a8385612963565b60608901516001600160a01b03169190611902565b611b7d8660600151836121ef565b82821015611bab576000611b95876060015186612192565b9050808760800151611ba79190612963565b9550505b50505050919050565b6000808052600180840160205260408083208484528184208581556002808301805491830182905590865292852090930185905590849055845490928590611bfb836127ed565b919050555050505050565b611c0e61151e565b6001600160a01b03808216600090815260056020818152604092839020835161010081018552815490951685526001810154918501919091526002810154928401929092526003820154606084018190526004830154608085018190529183015460a08501819052600684015460c086015260079093015460e085015291611ccd908590611c9c90856127da565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190611902565b611d12848460c0015183611ce191906127da565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190611902565b60065460005b81811015611e0e57856001600160a01b031660068281548110611d3d57611d3d61294d565b6000918252602090912001546001600160a01b031603611e06576006611d64600184612963565b81548110611d7457611d7461294d565b600091825260209091200154600680546001600160a01b039092169183908110611da057611da061294d565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506006805480611ddf57611ddf61298d565b600082815260209020810160001990810180546001600160a01b0319169055019055611e0e565b600101611d18565b506001600160a01b038516600081815260056020818152604080842080546001600160a01b0319168155600181018590556002810185905560038101859055600481018590559283018490556006830184905560079092019290925580518681529182018590527f9ef62b3977a48a8546a19330f589832b9063b3ce62aba70d3e1476278642a8c1910160405180910390a25050505050565b805460609067ffffffffffffffff811115611ec457611ec4612937565b604051908082528060200260200182016040528015611eed578160200160208202803683370190505b50600080805260018085016020526040822001549192505b8354811015611f4c5781838281518110611f2157611f2161294d565b6020908102919091018101919091526000928352600180860190915260409092208201549101611f05565b5050919050565b611f5e600782612217565b6000818152600960205260408082208281556001810180546001600160a01b0319908116909155600282018054821690556003820180549091169055600481018390556005018290555182917fa7bec7790a90eefc51c752a274c61fa256e58e17fbfeb1340045117ada7f2f4491a250565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600460209081526040808320547f0000000000000000000000000000000000000000000000000000000000000000909416835282205491805260089052600080516020612a07833981519152545b801561212a57600081815260096020908152604091829020825160c0810184528154815260018201546001600160a01b0390811693820193909352600282015483169381018490526003820154831660608201526004820154608082015260059091015460a0820152917f000000000000000000000000000000000000000000000000000000000000000090911690036120f85760808101516120f19085612963565b935061210a565b60808101516121079084612963565b92505b5050600080526008602052600080516020612a078339815191525461204e565b509091565b60006121446001600160a01b038416836122db565b9050805160001415801561216957508080602001905181019061216791906129a3565b155b1561074157604051635274afe760e01b81526001600160a01b03841660048201526024016103b2565b6001600160a01b0382166000908152600260205260408120546121b99060ff16600a612906565b6001600160a01b0384166000908152600360205260409020546121dc9084612976565b6121e69190612915565b90505b92915050565b6001600160a01b0382166000908152600460205260408120805483929061197c908490612963565b815461225d5760405162461bcd60e51b815260206004820152601560248201527451756575653a20717565756520697320656d70747960581b60448201526064016103b2565b6000818152600180840160208181526040808520815160608101835281548152818601805482860181815260028086018054868901818152948d5299909852868b2001979097559551955188529287209095019390935585855291849055908390558290558354909184906122d1836129c0565b9190505550505050565b60606121e68383600084600080856001600160a01b0316848660405161230191906129d7565b60006040518083038185875af1925050503d806000811461233e576040519150601f19603f3d011682016040523d82523d6000602084013e612343565b606091505b509150915061235386838361235f565b925050505b9392505050565b6060826123745761236f826123bb565b612358565b815115801561238b57506001600160a01b0384163b155b156123b457604051639996b31560e01b81526001600160a01b03851660048201526024016103b2565b5080612358565b8051156123cb5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060c001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081525090565b60405180610100016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461249a57600080fd5b919050565b6000602082840312156124b157600080fd5b6121e682612483565b6000806000606084860312156124cf57600080fd5b6124d884612483565b95602085013595506040909401359392505050565b600080600080600060a0868803121561250557600080fd5b61250e86612483565b945061251c60208701612483565b935061252a60408701612483565b94979396509394606081013594506080013592915050565b60006020828403121561255457600080fd5b5035919050565b805182526020808201516001600160a01b0390811691840191909152604080830151821690840152606080830151909116908301526080808201519083015260a090810151910152565b602080825282518282018190526000918401906040840190835b818110156125e8576125d283855161255b565b6020939093019260c092909201916001016125bf565b509095945050505050565b8015158114610c7d57600080fd5b60006020828403121561261357600080fd5b8135612358816125f3565b60c081016121e9828461255b565b81516001600160a01b03908116825260208084015182169083015260408084015190911690820152606080830151908201526080808301519082015260a0828101519082015260c0808301519082015260e0808301516101008301916126959084018215159052565b5092915050565b600080604083850312156126af57600080fd5b6126b883612483565b946020939093013593505050565b60018060a01b0381511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b602080825282518282018190526000918401906040840190835b818110156125e8576127498385516126c6565b602093909301926101009290920191600101612736565b61010081016121e982846126c6565b60208082526010908201526f15140e881d5b985d5d1a1bdc9a5e995960821b604082015260600190565b60208082526011908201527015140e88191bd95cdb89dd08195e1a5cdd607a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156121e9576121e96127c4565b6000600182016127ff576127ff6127c4565b5060010190565b60ff81811683821601908111156121e9576121e96127c4565b6001815b600184111561285a5780850481111561283e5761283e6127c4565b600184161561284c57908102905b60019390931c928002612823565b935093915050565b600082612871575060016121e9565b8161287e575060006121e9565b8160018114612894576002811461289e576128ba565b60019150506121e9565b60ff8411156128af576128af6127c4565b50506001821b6121e9565b5060208310610133831016604e8410600b84101617156128dd575081810a6121e9565b6128ea600019848461281f565b80600019048211156128fe576128fe6127c4565b029392505050565b60006121e660ff841683612862565b60008261293257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b818103818111156121e9576121e96127c4565b80820281158282048414176121e9576121e96127c4565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156129b557600080fd5b8151612358816125f3565b6000816129cf576129cf6127c4565b506000190190565b6000825160005b818110156129f857602081860181015185830152016129de565b50600092019182525091905056fe5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c8a2646970667358221220e02630b813cc6649130efc2e145203c98d6e24156e0e173bc28cd366c833a96964736f6c634300081c0033";

type TokenPairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPair__factory extends ContractFactory {
  constructor(...args: TokenPairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token0_: AddressLike,
    token1_: AddressLike,
    dexContract_: AddressLike,
    priceManager_: AddressLike,
    fee_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      token0_,
      token1_,
      dexContract_,
      priceManager_,
      fee_,
      overrides || {}
    );
  }
  override deploy(
    token0_: AddressLike,
    token1_: AddressLike,
    dexContract_: AddressLike,
    priceManager_: AddressLike,
    fee_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      token0_,
      token1_,
      dexContract_,
      priceManager_,
      fee_,
      overrides || {}
    ) as Promise<
      TokenPair & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenPair__factory {
    return super.connect(runner) as TokenPair__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPairInterface {
    return new Interface(_abi) as TokenPairInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenPair {
    return new Contract(address, _abi, runner) as unknown as TokenPair;
  }
}
