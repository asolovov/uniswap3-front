/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Test,
  TestInterface,
} from "../../../contracts/implementations/Test";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "id",
        type: "uint64",
      },
    ],
    name: "getNodePrev",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "id",
        type: "uint64",
      },
    ],
    name: "getUintPrev",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "setMap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "id",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "num",
        type: "uint64",
      },
    ],
    name: "setNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "setNum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "id",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "num",
        type: "uint64",
      },
    ],
    name: "setUint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506104118061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634921a50f14610067578063735eebc01461007c5780637de717b7146100de578063af9ef29f14610123578063b7cd1f861461014d578063cd16ecbf14610160575b600080fd5b61007a6100753660046102d9565b610173565b005b6100b261008a36600461030c565b67ffffffffffffffff166000908152600360205260409081902054608081901c929181901c91565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b6100b26100ec36600461030c565b67ffffffffffffffff90811660009081526002602052604090205480821692600160401b8204831692600160801b90920490911690565b61007a61013136600461032e565b6001600160a01b03909116600090815260208190526040902055565b61007a61015b3660046102d9565b61022f565b61007a61016e366004610366565b600155565b67ffffffffffffffff8216600090815260036020526040902054608061019a600184610395565b6fffffffffffffffff00000000000000001967ffffffffffffffff9190911690911b1677ffffffffffffffffffffffffffffffff000000000000000019909116176fffffffffffffffff0000000000000000604083901b16176101fe8260016103bb565b67ffffffffffffffff9384166000908152600360205260409020931667ffffffffffffffff19919091161790915550565b67ffffffffffffffff82166000908152600260205260409020610253600183610395565b815467ffffffffffffffff848116600160401b026fffffffffffffffffffffffffffffffff199092169216919091171781556102908260016103bb565b815467ffffffffffffffff91909116600160801b0267ffffffffffffffff60801b199091161790555050565b803567ffffffffffffffff811681146102d457600080fd5b919050565b600080604083850312156102ec57600080fd5b6102f5836102bc565b9150610303602084016102bc565b90509250929050565b60006020828403121561031e57600080fd5b610327826102bc565b9392505050565b6000806040838503121561034157600080fd5b82356001600160a01b038116811461035857600080fd5b946020939093013593505050565b60006020828403121561037857600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff82811682821603908111156103b5576103b561037f565b92915050565b67ffffffffffffffff81811683821601908111156103b5576103b561037f56fea264697066735822122051ede88959268e89ef764b296930628e8bf514625175595aed249d3a514905d864736f6c634300081c0033";

type TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Test__factory extends ContractFactory {
  constructor(...args: TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Test & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Test__factory {
    return super.connect(runner) as Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestInterface {
    return new Interface(_abi) as TestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Test {
    return new Contract(address, _abi, runner) as unknown as Test;
  }
}
