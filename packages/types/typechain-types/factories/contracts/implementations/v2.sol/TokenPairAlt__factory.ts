/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  Provider,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TokenPairAlt,
  TokenPairAltInterface,
} from "../../../../contracts/implementations/v2.sol/TokenPairAlt";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token0_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
      {
        internalType: "address",
        name: "dexContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "priceManager_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDexStructs.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "NewOrderState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NewPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBalance0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBalance1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "NewProvider",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OrderClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDexStructs.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "OrderCommited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxBalance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBalance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDexStructs.Provider",
        name: "state",
        type: "tuple",
      },
    ],
    name: "ProviderNewState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnedBalance0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnedBalance1",
        type: "uint256",
      },
    ],
    name: "ProviderRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowedMaxBalance0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowedMaxBalance1",
        type: "uint256",
      },
    ],
    name: "addProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "claimRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
    ],
    name: "closeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "commitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "depositLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IDexStructs.Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getProvider",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxBalance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBalance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
        ],
        internalType: "struct IDexStructs.Provider",
        name: "prov",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProviders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxBalance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBalance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royalty1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
        ],
        internalType: "struct IDexStructs.Provider[]",
        name: "provs",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pairContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "tkn0",
            type: "address",
          },
          {
            internalType: "address",
            name: "tkn1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "liquidity0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price1",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct IDexStructs.Pair",
        name: "pair",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "removeProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161284638038061284683398101604081905261002f916101c1565b600080546001600160a01b038086166001600160a01b0319928316179092556001805485841690831617905560028054888416908316811790915560038054938816939092169290921790556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa1580156100b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100da919061021f565b6001600160a01b03868116600090815260046020818152604092839020805460ff191660ff9690961695909517909455600354825163313ce56760e01b8152925193169363313ce5679383830193919290918290030181865afa158015610145573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610169919061021f565b6001600160a01b03949094166000908152600460205260409020805460ff191660ff909516949094179093555050600855506001600a55610249565b80516001600160a01b03811681146101bc57600080fd5b919050565b600080600080600060a086880312156101d957600080fd5b6101e2866101a5565b94506101f0602087016101a5565b93506101fe604087016101a5565b925061020c606087016101a5565b9150608086015190509295509295909350565b60006020828403121561023157600080fd5b815160ff8116811461024257600080fd5b9392505050565b6125ee806102586000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638d6cc56d116100b2578063d21220a711610081578063e26ff58011610066578063e26ff58014610384578063ea999dff1461019d578063edc922a91461039657600080fd5b8063d21220a71461013b578063dcf206661461033a57600080fd5b80638d6cc56d1461021a578063a0a986f11461022d578063ac9f02221461025a578063d09ef2411461026857600080fd5b8063434153c6116101095780636caf25ce116100ee5780636caf25ce146101d05780636e7ff371146102075780638a355a571461016857600080fd5b8063434153c61461019d57806355f21eb7146101b057600080fd5b80630dfe16811461013b57806310c44d421461016857806322f3e2d41461017b578063309c78591461018a575b600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610179610176366004611f9f565b50565b005b6040516001815260200161015f565b610179610198366004611fba565b6103a5565b6101796101ab366004611fba565b505050565b6101c36101be366004611f9f565b61062f565b60405161015f9190611fed565b60035473ffffffffffffffffffffffffffffffffffffffff166000908152600560205260409020545b60405190815260200161015f565b61017961021536600461205b565b610692565b6101796102283660046120b0565b611647565b60025473ffffffffffffffffffffffffffffffffffffffff166000908152600560205260409020546101f9565b6101796101763660046120d7565b6102ac6102763660046120b0565b506040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b60405161015f9190600060c0820190508251825273ffffffffffffffffffffffffffffffffffffffff602084015116602083015273ffffffffffffffffffffffffffffffffffffffff604084015116604083015273ffffffffffffffffffffffffffffffffffffffff60608401511660608301526080830151608083015260a083015160a083015292915050565b6040805161010081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820152905161015f91906120f4565b610179610392366004612199565b5050565b606060405161015f91906121c3565b6103e36040518060400160405280601981526020017f3d3d3d206465706f736974206c6971756964697479203d3d3d000000000000008152506117a3565b81156105075773ffffffffffffffffffffffffffffffffffffffff83166000908152600d6020526040812060030180548492906104219084906122a0565b909155505060025473ffffffffffffffffffffffffffffffffffffffff166000908152600660205260408120805484929061045d9084906122a0565b90915550506002546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156104e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050591906122b3565b505b80156101ab5773ffffffffffffffffffffffffffffffffffffffff83166000908152600d6020526040812060040180548392906105459084906122a0565b909155505060035473ffffffffffffffffffffffffffffffffffffffff16600090815260066020526040812080548392906105819084906122a0565b90915550506003546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af1158015610605573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062991906122b3565b50505050565b61068d604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b919050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f54503a20756e617574686f72697a656400000000000000000000000000000000604482015260640160405180910390fd5b60006040518060c00160405280600a5481526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001834261079291906122a0565b9052600a805491925060006107a6836122d0565b91905055506107e96040518060400160405280601281526020017f3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d00000000000000000000000000008152506117a3565b61082c6040518060400160405280600281526020017f69640000000000000000000000000000000000000000000000000000000000008152508260000151611832565b61086f6040518060400160405280600481526020017f757365720000000000000000000000000000000000000000000000000000000081525082602001516118c3565b6108b26040518060400160405280600881526020017f746f6b656e20696e00000000000000000000000000000000000000000000000081525082604001516118c3565b6108f56040518060400160405280600981526020017f746f6b656e206f7574000000000000000000000000000000000000000000000081525082606001516118c3565b6109386040518060400160405280600f81526020017f746f6b656e20696e20616d6f756e7400000000000000000000000000000000008152508260800151611832565b61097b6040518060400160405280600881526020017f646561646c696e650000000000000000000000000000000000000000000000008152508260a00151611832565b80516020808301805160408051858152925173ffffffffffffffffffffffffffffffffffffffff90811694840194909452808601518416838201526060808701518516908401526080808701519084015260a08087015190840152519216917fa5f69189019c16683c35d5daeb132509a2e4c76760aa090e7f2df23347c787c19181900360c00190a373ffffffffffffffffffffffffffffffffffffffff8416600090815260066020526040902054801561127057610a6f6040518060400160405280601681526020017f6c6971756964697479206d6f7265207468616e20303a0000000000000000000081525082611832565b6000610a7b8284611954565b600b5490915060009015801590610ae457508773ffffffffffffffffffffffffffffffffffffffff16600b600081548110610ab857610ab8612308565b600091825260209091206003600690920201015473ffffffffffffffffffffffffffffffffffffffff16145b1561116057610b276040518060400160405280601481526020017f3d3d3d20636c6f7365206f7264657273203d3d3d0000000000000000000000008152506117a3565b6000805b600b5481101561112357610b986040518060400160405280600881526020017f3d3d206f72646572000000000000000000000000000000000000000000000000815250600b8381548110610b8157610b81612308565b906000526020600020906006020160000154611832565b42600b8281548110610bac57610bac612308565b906000526020600020906006020160050154111561111b576000610bf48a600b8481548110610bdd57610bdd612308565b906000526020600020906006020160040154611ee1565b9050610c356040518060400160405280601081526020017f6f7264657220616d6f756e74206f75740000000000000000000000000000000081525082611832565b80610c40858b612337565b1115610e4d57610c846040518060400160405280600b81526020017f636c6f7365206f726465720000000000000000000000000000000000000000008152506117a3565b610c8e81856122a0565b9350600061271060085483610ca3919061234a565b610cad9190612361565b9050610cb981856122a0565b9350610cfa6040518060400160405280600681526020017f66656520696e000000000000000000000000000000000000000000000000000081525082611832565b8b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8e600b8681548110610d2a57610d2a612308565b600091825260209091206001600690920201015473ffffffffffffffffffffffffffffffffffffffff16610d5e8587612337565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb91906122b3565b50600b8381548110610e0f57610e0f612308565b6000918252602082206006909102015460405190917fa7bec7790a90eefc51c752a274c61fa256e58e17fbfeb1340045117ada7f2f4491a25061110c565b6000612710600854868c610e619190612337565b610e6b919061234a565b610e759190612361565b9050610e8181856122a0565b93508b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8e600b8681548110610eb357610eb3612308565b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684898f610ef29190612337565b610efc9190612337565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9991906122b3565b50610fa4858b612337565b600b8481548110610fb757610fb7612308565b90600052602060002090600602016004016000828254610fd79190612337565b9091555050600b805484908110610ff057610ff0612308565b906000526020600020906006020160000154600b848154811061101557611015612308565b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fa6ffcf2f4f5cdbe6f79babe10532eb81810844359f4b08181223a258762d542c600b868154811061109157611091612308565b90600052602060002090600602016040516110ff919081548152600182015473ffffffffffffffffffffffffffffffffffffffff908116602083015260028301548116604083015260038301541660608201526004820154608082015260059091015460a082015260c00190565b60405180910390a3899450505b8884036111195750611123565b505b600101610b2b565b5073ffffffffffffffffffffffffffffffffffffffff8916600090815260076020526040812080548392906111599084906122a0565b9091555050505b61119f6040518060400160405280601181526020017f746f74616c2073656e74206f757420696e00000000000000000000000000000081525083611832565b6111de6040518060400160405280601281526020017f636c6f7365642066726f6d206f7264657273000000000000000000000000000081525082611832565b80821115611269576112246040518060400160405280600681526020017f59455321212100000000000000000000000000000000000000000000000000008152506117a3565b61122e8187612337565b73ffffffffffffffffffffffffffffffffffffffff8916600090815260096020526040812080549091906112639084906122a0565b90915550505b505061156c565b6112ae6040518060400160405280600b81526020017f6c697175696469747920300000000000000000000000000000000000000000008152506117a3565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152306024830152604482018690528716906323b872dd906064016020604051808303816000875af1158015611329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134d91906122b3565b5073ffffffffffffffffffffffffffffffffffffffff8616600090815260066020526040812080548692906113839084906122a0565b925050819055506114086040518060400160405280600e81526020017f6e6577206c69717569646974793a000000000000000000000000000000000000815250600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611832565b600b805460018101825560009190915282517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db960069092029182015560208301517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dba820180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560408501517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbb84018054831691841691909117905560608501517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbc84018054909216921691909117905560808301517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbd82015560a08301517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbe909101555b604080518082018252601381527f66696e616c206c6971756964697479202d20300000000000000000000000000060208083019190915260025473ffffffffffffffffffffffffffffffffffffffff166000908152600690915291909120546115d59190611832565b604080518082018252601381527f66696e616c206c6971756964697479202d20310000000000000000000000000060208083019190915260035473ffffffffffffffffffffffffffffffffffffffff1660009081526006909152919091205461163e9190611832565b50505050505050565b6002805473ffffffffffffffffffffffffffffffffffffffff90811660009081526005602090815260408083208690556003548416835260049091528082205493549092168152205482916116a29160ff918216911661239c565b6116ad90600a6124d8565b6116b890600161234a565b6116c29190612361565b60035473ffffffffffffffffffffffffffffffffffffffff90811660009081526005602081815260408084209590955584518086018652600d81527f707269636520746f6b656e303a0000000000000000000000000000000000000081830152600254909416835252919091205461173a9190611832565b604080518082018252600d81527f707269636520746f6b656e313a0000000000000000000000000000000000000060208083019190915260035473ffffffffffffffffffffffffffffffffffffffff166000908152600590915291909120546101769190611832565b610176816040516024016117b7919061254b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052611f56565b610392828260405160240161184892919061255e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052611f56565b61039282826040516024016118d9929190612580565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f319af33300000000000000000000000000000000000000000000000000000000179052611f56565b60006119946040518060400160405280601481526020017f3d3d3d2073656e6420746f2075736572203d3d3d0000000000000000000000008152506117a3565b60006119a883604001518460800151611ee1565b90506119e96040518060400160405280600b81526020017f616d6f756e74206f75743a00000000000000000000000000000000000000000081525082611832565b600081851115611b575761271060085483611a04919061234a565b611a0e9190612361565b9050836060015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85602001518385611a419190612337565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad591906122b3565b50606084015173ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604081208054849290611b0f908490612337565b90915550506060840151611b239083611ee1565b8451604051919450907fa7bec7790a90eefc51c752a274c61fa256e58e17fbfeb1340045117ada7f2f4490600090a2611e16565b611b956040518060400160405280601a81526020017f6c6971756964697479206c657373207468616e20616d6f756e740000000000008152506117a3565b61271060085486611ba6919061234a565b611bb09190612361565b9050611bf16040518060400160405280600481526020017f6665653a0000000000000000000000000000000000000000000000000000000081525082611832565b836060015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85602001518388611c229190612337565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015611c92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb691906122b3565b5060608401805173ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604081205551611ced9086611ee1565b92508284608001818151611d019190612337565b905250608084015160408086015173ffffffffffffffffffffffffffffffffffffffff16600090815260066020529081208054909190611d429084906122a0565b92505081905550611d8c6040518060400160405280601081526020017f6e6577206f7264657220616d6f756e74000000000000000000000000000000008152508560800151611832565b83516020808601805160408051858152925173ffffffffffffffffffffffffffffffffffffffff90811694840194909452808901518416838201526060808a01518516908401526080808a01519084015260a0808a015190840152519216917fa6ffcf2f4f5cdbe6f79babe10532eb81810844359f4b08181223a258762d542c9181900360c00190a35b606084015173ffffffffffffffffffffffffffffffffffffffff1660009081526007602052604081208054839290611e4f9084906122a0565b92505081905550611ed86040518060400160405280601181526020017f756e64697374726962757465642066656500000000000000000000000000000081525060076000876060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611832565b50505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260046020526040812054611f159060ff16600a6124d8565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260056020526040902054611f45908461234a565b611f4f9190612361565b9392505050565b6101768160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461068d57600080fd5b600060208284031215611fb157600080fd5b611f4f82611f7b565b600080600060608486031215611fcf57600080fd5b611fd884611f7b565b95602085013595506040909401359392505050565b6101008101611edb828473ffffffffffffffffffffffffffffffffffffffff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b600080600080600060a0868803121561207357600080fd5b61207c86611f7b565b945061208a60208701611f7b565b935061209860408701611f7b565b94979396509394606081013594506080013592915050565b6000602082840312156120c257600080fd5b5035919050565b801515811461017657600080fd5b6000602082840312156120e957600080fd5b8135611f4f816120c9565b60006101008201905073ffffffffffffffffffffffffffffffffffffffff835116825273ffffffffffffffffffffffffffffffffffffffff602084015116602083015273ffffffffffffffffffffffffffffffffffffffff6040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015161219260e084018215159052565b5092915050565b600080604083850312156121ac57600080fd5b6121b583611f7b565b946020939093013593505050565b602080825282518282018190526000918401906040840190835b818110156122665761224f83855173ffffffffffffffffffffffffffffffffffffffff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b6020939093019261010092909201916001016121dd565b509095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115611edb57611edb612271565b6000602082840312156122c557600080fd5b8151611f4f816120c9565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361230157612301612271565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b81810381811115611edb57611edb612271565b8082028115828204841417611edb57611edb612271565b600082612397577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60ff8181168382160190811115611edb57611edb612271565b6001815b60018411156123f0578085048111156123d4576123d4612271565b60018416156123e257908102905b60019390931c9280026123b9565b935093915050565b60008261240757506001611edb565b8161241457506000611edb565b816001811461242a576002811461243457612450565b6001915050611edb565b60ff84111561244557612445612271565b50506001821b611edb565b5060208310610133831016604e8410600b8410161715612473575081810a611edb565b61249e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846123b5565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156124d0576124d0612271565b029392505050565b6000611f4f60ff8416836123f8565b6000815180845260005b8181101561250d576020818501810151868301820152016124f1565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000611f4f60208301846124e7565b60408152600061257160408301856124e7565b90508260208301529392505050565b60408152600061259360408301856124e7565b905073ffffffffffffffffffffffffffffffffffffffff83166020830152939250505056fea2646970667358221220689e74cd00c85f6074fdb6c4e2f2a37f526cec172f64b0db9d310e2bab71e44464736f6c634300081c0033";

type TokenPairAltConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPairAltConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPairAlt__factory extends ContractFactory {
  constructor(...args: TokenPairAltConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token0_: AddressLike,
    token1_: AddressLike,
    dexContract_: AddressLike,
    priceManager_: AddressLike,
    fee_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      token0_,
      token1_,
      dexContract_,
      priceManager_,
      fee_,
      overrides || {}
    );
  }
  override deploy(
    token0_: AddressLike,
    token1_: AddressLike,
    dexContract_: AddressLike,
    priceManager_: AddressLike,
    fee_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      token0_,
      token1_,
      dexContract_,
      priceManager_,
      fee_,
      overrides || {}
    ) as Promise<
      TokenPairAlt & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenPairAlt__factory {
    return super.connect(runner) as TokenPairAlt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPairAltInterface {
    return new Interface(_abi) as TokenPairAltInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenPairAlt {
    return new Contract(address, _abi, runner) as unknown as TokenPairAlt;
  }
}
